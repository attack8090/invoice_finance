# Invoice Financing Platform - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env files to version control

# ===== APPLICATION SETTINGS =====
# Set to production for production deployment
NODE_ENV=development
GIN_MODE=debug

# Server configuration
PORT=8080
HOST=localhost

# API Base URL (for internal service communication)
API_BASE_URL=http://localhost:8080/api/v1

# ===== DATABASE CONFIGURATION =====
# MongoDB database connection
DATABASE_URL=mongodb://username:password@localhost:27017/invoice_finance_db
DB_HOST=localhost
# MongoDB default port
DB_PORT=27017
DB_USER=invoice_user
DB_PASSWORD=secure_password
DB_NAME=invoice_finance_db

# MongoDB connection pool settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_MAX_LIFETIME=300s

# ===== SECURITY CONFIGURATION =====
# JWT Settings - Use strong, random keys in production
JWT_SECRET=your-super-secret-jwt-key-should-be-at-least-32-characters
JWT_REFRESH_SECRET=your-refresh-token-secret-key-different-from-access-token
JWT_EXPIRY=1h
JWT_REFRESH_EXPIRY=7d

# Password hashing settings
BCRYPT_COST=12

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,https://yourdomain.com
CORS_ALLOW_ALL=false

# Content Security Policy
CSP_POLICY="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';"

# API Keys for third-party services (optional)
API_KEYS=api-key-1,api-key-2,api-key-3

# Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX=5
UPLOAD_RATE_LIMIT_MAX=10

# ===== EXTERNAL SERVICES =====
# Frontend application URLs
FRONTEND_URL=https://yourdomain.com
PRODUCTION_URL=https://app.yourdomain.com

# ===== BLOCKCHAIN CONFIGURATION =====
# Ethereum/Web3 Settings
ETHEREUM_RPC=https://mainnet.infura.io/v3/your-project-id
ETHEREUM_NETWORK=mainnet
PRIVATE_KEY=your-ethereum-private-key-for-transactions
CONTRACT_ADDRESS=0x1234567890123456789012345678901234567890
GAS_LIMIT=300000
GAS_PRICE=20000000000

# ===== AI/ML SERVICES =====
# AI Model Endpoints
AI_MODEL_ENDPOINT=https://api.openai.com/v1
AI_API_KEY=your-openai-api-key
CREDIT_SCORING_MODEL=gpt-4
RISK_ASSESSMENT_MODEL=gpt-4

# ===== FILE STORAGE =====
# File upload settings
UPLOAD_PATH=/tmp/uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=pdf,jpg,jpeg,png
STORAGE_TYPE=local

# ===== CACHE CONFIGURATION =====
# Redis settings (for caching and sessions)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password
CACHE_TTL=3600

# ===== SSL/TLS CONFIGURATION =====
# HTTPS settings for production
SSL_CERT_PATH=/path/to/ssl/certificate.crt
SSL_KEY_PATH=/path/to/ssl/private.key
FORCE_HTTPS=true
HSTS_MAX_AGE=31536000

# ===== SECURITY HEADERS =====
# Additional security configuration
TRUSTED_PROXIES=127.0.0.1,::1
RATE_LIMIT_SKIP_IPS=127.0.0.1,::1
WHITELIST_IPS=

# Session security
SESSION_SECRET=your-session-secret-key
SESSION_TIMEOUT=1800
SECURE_COOKIES=true

# ===== NOTES =====
# 1. Replace all placeholder values with actual credentials
# 2. Use environment-specific values (dev/staging/prod)
# 3. Store secrets securely (e.g., AWS Secrets Manager, HashiCorp Vault)
# 4. Regularly rotate API keys and passwords
# 5. Use strong, unique passwords for all services
# 6. Enable 2FA where possible
# 7. Regularly review and update security configurations
